Label,Description,Expression,DRIVEALONEFREE,SHARED2FREE,SHARED3FREE,WALK,BIKE,WALK_LOC,WALK_LR,WALK_FRY,WALK_COM,DRIVE_TRN,TNC_SINGLE,SCH_BUS
#,Drive alone ,,,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable,DRIVEALONEFREE - Unavailable,sov_available == False,-999,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,DRIVEALONEFREE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,DRIVEALONEFREE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_for_joint_tours,DRIVEALONEFREE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,DRIVEALONEFREE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,,,
util_DRIVEALONEFREE_In_vehicle_time,DRIVEALONEFREE - In-vehicle time,@(df.da_time_skims_out + df.da_time_skims_inb) * df.time_factor,coef_ivt,,,,,,,,,,,
util_DRIVEALONEFREE_Terminal_time,DRIVEALONEFREE - Terminal time,@2 * df.terminal_time * df.time_factor,coef_walktime_short,,,,,,,,,,,
util_DRIVEALONEFREE_Operating_cost,DRIVEALONEFREE - Operating cost,"@costPerMile * (df.da_dist_skims_out + df.da_dist_skims_inb)/(np.maximum(df.income,1000)**df.income_exponent)",coef_inc_adj_cost,,,,,,,,,,,
util_DRIVEALONEFREE_Parking_cost,DRIVEALONEFREE - Parking cost,"@df.daily_parking_cost/(np.maximum(df.income,1000)**df.income_exponent)",coef_inc_adj_cost,,,,,,,,,,,
util_DRIVEALONEFREE_Value_toll,DRIVEALONEFREE - Value toll,"@(df.da_vtoll_skims_out + df.da_vtoll_skims_inb) * 100/(np.maximum(df.income,1000)**df.income_exponent)",coef_inc_adj_cost,,,,,,,,,,,
util_DRIVEALONEFREE_Person_is_between_16_and_19_years_old,DRIVEALONEFREE - Person is between 16 and 19 years old,@(df.age >= 16) & (df.age <= 19),coef_age1619_da,,,,,,,,,,,
#,Shared ride 2,,,,,,,,,,,,,
util_SHARED2FREE_Unavailable,SHARED2FREE - Unavailable,hov2_available == False,,-999,,,,,,,,,,
util_SHARED2FREE_Unavailable_based_on_party_size,SHARED2FREE - Unavailable based on party size,is_joint & (number_of_participants > 2),,-999,,,,,,,,,,
util_SHARED2FREE_In_vehicle_time,SHARED2FREE - In-vehicle time,@(df.s2_time_skims_out + df.s2_time_skims_inb) * df.time_factor,,coef_ivt,,,,,,,,,,
util_SHARED2FREE_Terminal_time,SHARED2FREE - Terminal time,@2 * df.terminal_time * df.time_factor,,coef_walktime_short,,,,,,,,,,
util_SHARED2FREE_Operating_cost,SHARED2FREE - Operating cost,"@costPerMile * (df.s2_dist_skims_out + df.s2_dist_skims_inb)/(np.maximum(df.income,1000)**df.income_exponent)",,coef_inc_adj_cost,,,,,,,,,,
util_SHARED2FREE_Parking_cost,SHARED2FREE - Parking cost,"@df.daily_parking_cost / costShareSr2/(np.maximum(df.income,1000)**df.income_exponent)",,coef_inc_adj_cost,,,,,,,,,,
util_SHARED2FREE_Value_toll,SHARED2FREE - Value toll,"@(df.s2_vtoll_skims_out + df.s2_vtoll_skims_inb) * 100 / costShareSr2/(np.maximum(df.income,1000)**df.income_exponent)",,coef_inc_adj_cost,,,,,,,,,,
util_SHARED2FREE_One_person_household,SHARED2FREE - One person household,@(df.hhsize == 1),,coef_hhsize1_sr,,,,,,,,,,
util_SHARED2FREE_Two_person_household,SHARED2FREE - Two person household,@(df.hhsize == 2),,coef_hhsize2_sr,,,,,,,,,,
util_SHARED2FREE_Person_is_16_years_old_or_older,SHARED2FREE - Person is 16 years old or older,@(df.age >= 16),,coef_age16p_sr,,,,,,,,,,
#,Shared ride 3+,,,,,,,,,,,,,
util_SHARED3FREE_Unavailable,SHARED3FREE - Unavailable,hov3_available == False,,,-999,,,,,,,,,
util_SHARED3FREE_In_vehicle_time,SHARED3FREE - In-vehicle time,@(df.s3_time_skims_out + df.s3_time_skims_inb) * df.time_factor,,,coef_ivt,,,,,,,,,
util_SHARED3FREE_Terminal_time,SHARED3FREE - Terminal time,@2 * df.terminal_time * df.time_factor,,,coef_walktime_short,,,,,,,,,
util_SHARED3FREE_Operating_cost,SHARED3FREE - Operating cost,"@costPerMile * (df.s3_dist_skims_out + df.s3_dist_skims_inb)/(np.maximum(df.income,1000)**df.income_exponent)",,,coef_inc_adj_cost,,,,,,,,,
util_SHARED3FREE_Parking_cost,SHARED3FREE - Parking cost,"@df.daily_parking_cost / costShareSr3/(np.maximum(df.income,1000)**df.income_exponent)",,,coef_inc_adj_cost,,,,,,,,,
util_SHARED3FREE_Value_toll,SHARED3FREE - Value toll,"@(df.s3_vtoll_skims_out + df.s3_vtoll_skims_inb) * 100 / costShareSr3/(np.maximum(df.income,1000)**df.income_exponent)",,,coef_inc_adj_cost,,,,,,,,,
util_SHARED3FREE_One_person_household,SHARED3FREE - One person household,@(df.hhsize == 1),,,coef_hhsize1_sr,,,,,,,,,
util_SHARED3FREE_Two_person_household,SHARED3FREE - Two person household,@(df.hhsize == 2),,,coef_hhsize2_sr,,,,,,,,,
util_SHARED3FREE_Person_is_16_years_old_or_older,SHARED3FREE - Person is 16 years old or older,@(df.age >= 16),,,coef_age16p_sr,,,,,,,,,
#,Walk,,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,
util_WALK_Time_up_to_2_miles,WALK - Time up to 2 miles,@(od_skims['DISTWALK'] > 0) * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed * df.time_factor,,,,coef_walktime_short,,,,,,,,
util_WALK_Time_beyond_2_of_a_miles,WALK - Time beyond 2 of a miles,@(od_skims['DISTWALK'] > 0) * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed * df.time_factor,,,,coef_walktime_long,,,,,,,,
util_WALK_Destination_zone_densityIndex,WALK - Destination zone densityIndex,@df.dest_density_index,,,,coef_density_index,,,,,,,,
#,Bike,,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,
util_BIKE_Unavailable_if_didn't_bike_to_work,BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,-999,,,,,,,
util_BIKE_Time_up_to_6_miles,BIKE - Time up to 6 miles,@(od_skims['DISTBIKE'] > 0) * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed * df.time_factor,,,,,coef_biketime_short,,,,,,,
util_BIKE_Time_beyond_6_of_a_miles,BIKE - Time beyond 6 of a miles,@(od_skims['DISTBIKE'] > 0) * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed * df.time_factor,,,,,coef_biketime_long,,,,,,,
util_BIKE_Destination_zone_densityIndex,BIKE - Destination zone densityIndex,@df.dest_density_index,,,,,coef_density_index,,,,,,,
#,Walk to Local,,,,,,,,,,,,,
util_WALK_LOC_Unavailable,WALK_LOC - Unavailable,walk_local_available == False,,,,,,-999,,,,,,
util_WALK_LOC_In_vehicle_time,WALK_LOC - In-vehicle time,@(odt_skims['WLK_LOC_WLK_TOTIVT'] + dot_skims['WLK_LOC_WLK_TOTIVT']) * df.time_factor,,,,,,coef_ivt,,,,,,
util_WALK_LOC_Short_iwait_time,WALK_LOC - Short iwait time,@((odt_skims['WLK_LOC_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,coef_iwait_short,,,,,,
util_WALK_LOC_Long_iwait_time,WALK_LOC - Long iwait time,@((odt_skims['WLK_LOC_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,coef_iwait_long,,,,,,
util_WALK_LOC_Short_transfer_wait_time,WALK_LOC - Short transfer wait time,@((odt_skims['WLK_LOC_WLK_XWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_XWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,coef_xwait_short,,,,,,
util_WALK_LOC_Long_transfer_wait_time,WALK_LOC - Long transfer wait time,@((odt_skims['WLK_LOC_WLK_XWAIT']-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_XWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,coef_xwait_long,,,,,,
util_WALK_LOC_number_of_transfers,WALK_LOC - number of transfers,@((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)) * df.time_factor,,,,,,coef_xfer,,,,,,
util_WALK_LOC_Walk_other_time,WALK_LOC - Walk time,@(odt_skims['WLK_LOC_WLK_WAUX'] + dot_skims['WLK_LOC_WLK_WAUX']) * df.time_factor,,,,,,coef_walktime_short,,,,,,
util_WALK_LOC_Fare,WALK_LOC - Fare,"@(odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR'])/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,coef_inc_adj_cost,,,,,,
util_WALK_LOC_Destination_zone_densityIndex,WALK_LOC - Destination zone densityIndex,@df.dest_density_index,,,,,,coef_density_index,,,,,,
util_WALK_LOC_Person_is_less_than_10_years_old,WALK_LOC - Person is less than 10 years old,@(df.age <= 10),,,,,,coef_age010_trn,,,,,,
#,Walk to Light rail,,,,,,,,,,,,,
util_WALK_LR_Unavailable,WALK_LR - Unavailable,walk_light_rail_available == False,,,,,,,-999,,,,,
util_WALK_LR_In_vehicle_time_not_on_light_rail,WALK_LR - In-vehicle time not on light rail,@(odt_skims['WLK_LR_WLK_TOTIVT'] + dot_skims['WLK_LR_WLK_TOTIVT'] - odt_skims['WLK_LR_WLK_KEYIVT'] - dot_skims['WLK_LR_WLK_KEYIVT']) * df.time_factor,,,,,,,coef_ivt,,,,,
util_WALK_LR_In_vehicle_time_on_light_rail,WALK_LR - In-vehicle time on light rail,@(odt_skims['WLK_LR_WLK_KEYIVT'] + dot_skims['WLK_LR_WLK_KEYIVT']) * df.time_factor,,,,,,,coef_ivt_lr,,,,,
util_WALK_LR_Short_iwait_time,WALK_LR - Short iwait time,@((odt_skims['WLK_LR_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_LR_WLK_IWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,coef_iwait_short,,,,,
util_WALK_LR_Long_iwait_time,WALK_LR - Long iwait time,@((odt_skims['WLK_LR_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_LR_WLK_IWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,coef_iwait_long,,,,,
util_WALK_LR_Short_transfer_wait_time,WALK_LR - Short transfer wait time,@((odt_skims['WLK_LR_WLK_XWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_LR_WLK_XWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,coef_xwait_short,,,,,
util_WALK_LR_Long_transfer_wait_time,WALK_LR - Long transfer wait time,@((odt_skims['WLK_LR_WLK_XWAIT']-waitThresh).clip(0) + (dot_skims['WLK_LR_WLK_XWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,coef_xwait_long,,,,,
util_WALK_LR_number_of_transfers,WALK_LR - number of transfers,@((odt_skims['WLK_LR_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LR_WLK_BOARDS']-1).clip(0)) * df.time_factor,,,,,,,coef_xfer,,,,,
util_WALK_LR_Walk_other_time,WALK_LR - Walk time,@(odt_skims['WLK_LR_WLK_WAUX'] + dot_skims['WLK_LR_WLK_WAUX']) * df.time_factor,,,,,,,coef_walktime_short,,,,,
util_WALK_LR_Fare,WALK_LR - Fare,"@(odt_skims['WLK_LR_WLK_FAR'] + dot_skims['WLK_LR_WLK_FAR'])/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,coef_inc_adj_cost,,,,,
util_WALK_LR_Destination_zone_densityIndex,WALK_LR - Destination zone densityIndex,@df.density_index,,,,,,,coef_density_index,,,,,
util_WALK_LR_Person_is_less_than_10_years_old,WALK_LR - Person is less than 10 years old,@(df.age <= 10),,,,,,,coef_age010_trn,,,,,
#,Walk to Ferry ASC,,,,,,,,,,,,,
util_WALK_FRY_Unavailable,WALK_FRY - Unavailable,walk_ferry_available == False,,,,,,,,-999,,,,
util_WALK_FRY_In_vehicle_time_not_on_ferry,WALK_FRY - In-vehicle time not on ferry,@(odt_skims['WLK_FRY_WLK_TOTIVT'] + dot_skims['WLK_FRY_WLK_TOTIVT'] - odt_skims['WLK_FRY_WLK_KEYIVT'] - dot_skims['WLK_FRY_WLK_KEYIVT']) * df.time_factor,,,,,,,,coef_ivt,,,,
util_WALK_FRY_In_vehicle_time_on_ferry,WALK_FRY - In-vehicle time on ferry,@(odt_skims['WLK_FRY_WLK_KEYIVT'] + dot_skims['WLK_FRY_WLK_KEYIVT']) * df.time_factor,,,,,,,,coef_ivt_fry,,,,
util_WALK_FRY_Short_iwait_time,WALK_FRY - Short iwait time,@((odt_skims['WLK_FRY_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_FRY_WLK_IWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,,coef_iwait_short,,,,
util_WALK_FRY_Long_iwait_time,WALK_FRY - Long iwait time,@((odt_skims['WLK_FRY_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_FRY_WLK_IWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,,coef_iwait_long,,,,
util_WALK_FRY_Short_transfer_wait_time,WALK_FRY - Short transfer wait time,@((odt_skims['WLK_FRY_WLK_XWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_FRY_WLK_XWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,,coef_xwait_short,,,,
util_WALK_FRY_Long_transfer_wait_time,WALK_FRY - Long transfer wait time,@((odt_skims['WLK_FRY_WLK_XWAIT']-waitThresh).clip(0) + (dot_skims['WLK_FRY_WLK_XWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,,coef_xwait_long,,,,
util_WALK_FRY_number_of_transfers,WALK_FRY - number of transfers,@((odt_skims['WLK_FRY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_FRY_WLK_BOARDS']-1).clip(0)) * df.time_factor,,,,,,,,coef_xfer,,,,
util_WALK_FRY_Walk_other_time,WALK_FRY - Walk time,@(odt_skims['WLK_FRY_WLK_WAUX'] + dot_skims['WLK_FRY_WLK_WAUX']) * df.time_factor,,,,,,,,coef_walktime_short,,,,
util_WALK_FRY_Fare,WALK_FRY - Fare,"@(odt_skims['WLK_FRY_WLK_FAR'] + dot_skims['WLK_FRY_WLK_FAR'])/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,coef_inc_adj_cost,,,,
util_WALK_FRY_Destination_zone_densityIndex,WALK_FRY - Destination zone densityIndex,@df.dest_density_index,,,,,,,,coef_density_index,,,,
util_WALK_FRY_Person_is_less_than_10_years_old,WALK_FRY - Person is less than 10 years old,@(df.age <= 10),,,,,,,,coef_age010_trn,,,,
#,Walk to Commuter rail,,,,,,,,,,,,,
util_WALK_COM_Unavailable,WALK_COM - Unavailable,walk_commuter_available == False,,,,,,,,,-999,,,
util_WALK_COM_In_vehicle_time_not_on_commuter_rail,WALK_COM - In-vehicle time not on commuter rail,@(odt_skims['WLK_COM_WLK_TOTIVT'] + dot_skims['WLK_COM_WLK_TOTIVT'] - odt_skims['WLK_COM_WLK_KEYIVT'] - dot_skims['WLK_COM_WLK_KEYIVT']) * df.time_factor,,,,,,,,,coef_ivt,,,
util_WALK_COM_In_vehicle_time_on_commuter_rail,WALK_COM - In-vehicle time on commuter rail,@(odt_skims['WLK_COM_WLK_KEYIVT'] + dot_skims['WLK_COM_WLK_KEYIVT']) * df.time_factor,,,,,,,,,coef_ivt_com,,,
util_WALK_COM_Short_iwait_time,WALK_COM - Short iwait time,@((odt_skims['WLK_COM_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,,,coef_iwait_short,,,
util_WALK_COM_Long_iwait_time,WALK_COM - Long iwait time,@((odt_skims['WLK_COM_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,,,coef_iwait_long,,,
util_WALK_COM_Short_transfer_wait_time,WALK_COM - Short transfer wait time,@((odt_skims['WLK_COM_WLK_XWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_XWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,,,coef_xwait_short,,,
util_WALK_COM_Long_transfer_wait_time,WALK_COM - Long transfer wait time,@((odt_skims['WLK_COM_WLK_XWAIT']-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_XWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,,,coef_xwait_long,,,
util_WALK_COM_number_of_transfers,WALK_COM - number of transfers,@((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)) * df.time_factor,,,,,,,,,coef_xfer,,,
util_WALK_COM_Walk_other_time,WALK_COM - Walk time,@(odt_skims['WLK_COM_WLK_WAUX'] + dot_skims['WLK_COM_WLK_WAUX']) * df.time_factor,,,,,,,,,coef_walktime_short,,,
util_WALK_COM_Fare,WALK_COM - Fare,"@(odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR'])/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,coef_inc_adj_cost,,,
util_WALK_COM_Destination_zone_densityIndex,WALK_COM - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,coef_density_index,,,
util_WALK_COM_Person_is_less_than_10_years_old,WALK_COM - Person is less than 10 years old,@(df.age <= 10),,,,,,,,,coef_age010_trn,,,
#,Drive to Transit,,,,,,,,,,,,,
util_DRIVE_TRN_Unavailable,DRIVE_TRN - Unavailable,drive_transit_available == False,,,,,,,,,,-999,,
util_DRIVE_TRN_Unavailable_for_zero_auto_households,DRIVE_TRN - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,-999,,
util_DRIVE_TRN_Unavailable_for_persons_less_than_16,DRIVE_TRN - Unavailable for persons less than 16,age < 16,,,,,,,,,,-999,,
util_DRIVE_TRN_In_vehicle_time,DRIVE_TRN - In-vehicle time,@(odt_skims['DRV_TRN_WLK_TOTIVT'] + dot_skims['WLK_TRN_DRV_TOTIVT']) * df.time_factor,,,,,,,,,,coef_ivt,,
util_DRIVE_TRN_Short_iwait_time,DRIVE_TRN - Short iwait time,@((odt_skims['DRV_TRN_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_TRN_DRV_IWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,,,,coef_iwait_short,,
util_DRIVE_TRN_Long_iwait_time,DRIVE_TRN - Long iwait time,@((odt_skims['DRV_TRN_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_TRN_DRV_IWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,,,,coef_iwait_long,,
util_DRIVE_TRN_Short_transfer_wait_time,DRIVE_TRN - Short transfer wait time,@((odt_skims['DRV_TRN_WLK_XWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_TRN_DRV_XWAIT']).clip(upper=waitThresh)) * df.time_factor,,,,,,,,,,coef_xwait_short,,
util_DRIVE_TRN_Long_transfer_wait_time,DRIVE_TRN - Long transfer wait time,@((odt_skims['DRV_TRN_WLK_XWAIT']-waitThresh).clip(0) + (dot_skims['WLK_TRN_DRV_XWAIT']-waitThresh).clip(0)) * df.time_factor,,,,,,,,,,coef_xwait_long,,
util_DRIVE_TRN_number_of_transfers,DRIVE_TRN - number of transfers,@((odt_skims['DRV_TRN_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_TRN_DRV_BOARDS']-1).clip(0)) * df.time_factor,,,,,,,,,,coef_xfer,,
util_DRIVE_TRN_Drive_time,DRIVE_TRN - Drive time,@(odt_skims['DRV_TRN_WLK_DTIM'] + dot_skims['WLK_TRN_DRV_DTIM']) * df.time_factor,,,,,,,,,,coef_dtim,,
util_DRIVE_TRN_Walk_other_time,DRIVE_TRN - Walk time,@(odt_skims['DRV_TRN_WLK_WAUX'] + dot_skims['WLK_TRN_DRV_WAUX']) * df.time_factor,,,,,,,,,,coef_walktime_short,,
util_DRIVE_TRN_Fare_and_operating_cost,DRIVE_TRN - Fare and operating cost,"@(odt_skims['DRV_TRN_WLK_FAR'] + dot_skims['WLK_TRN_DRV_FAR'] + (odt_skims['DRV_TRN_WLK_DDIST']+ dot_skims['WLK_TRN_DRV_DDIST']) * costPerMile)/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,coef_inc_adj_cost,,
util_DRIVE_TRN_Ratio_of_drive_access_distance_to_OD_distance,DRIVE_TRN - Ratio of drive access distance to OD distance,@dacc_ratio * ((odt_skims['DRV_TRN_WLK_DDIST']+ dot_skims['WLK_TRN_DRV_DDIST'])/(df.da_dist_skims_out + df.da_dist_skims_inb)),,,,,,,,,,1,,
util_DRIVE_TRN_Destination_zone_densityIndex,DRIVE_TRN - Destination zone densityIndex,@df.dest_density_index,,,,,,,,,,coef_density_index,,
util_DRIVE_TRN_Person_is_less_than_10_years_old,DRIVE_TRN - Person is less than 10 years old,@(df.age <= 10),,,,,,,,,,coef_age010_trn,,
#,TNC Single,,,,,,,,,,,,,
util_TNC_Single_In_vehicle_time,TNC Single - In-vehicle time,@(df.s2_time_skims_out + df.s2_time_skims_inb) * df.time_factor,,,,,,,,,,,coef_ivt,
util_TNC_Single_Wait_time,TNC Single - Wait time,@df.totalWaitSingleTNC,,,,,,,,,,,coef_iwait_ridehail,
util_TNC_Single_Tolls,TNC Single - Tolls,"@(df.s2_vtoll_skims_out + df.s2_vtoll_skims_inb) * 100/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,coef_inc_adj_cost,
util_TNC_Single_Cost,TNC Single - Cost,"@np.maximum(TNC_single_baseFare * 2 + (df.s2_dist_skims_out + df.s2_dist_skims_inb) * TNC_single_costPerMile + (df.s2_time_skims_out + df.s2_time_skims_inb) * TNC_single_costPerMinute, TNC_single_costMinimum)*100/(np.maximum(df.income,1000)**df.income_exponent)",,,,,,,,,,,coef_inc_adj_cost,
#,School bus,,,,,,,,,,,,,
util_School Bus - Unavailable,School Bus - Unavailable,SCHBUS_available==0,,,,,,,,,,,,-999
util_School Bus - In-vehicle Time at 20 miles per hour,School Bus - In-vehicle Time at 20 miles per hour,(da_dist_skims_out + da_dist_skims_inb)*3 * time_factor,,,,,,,,,,,,coef_ivt
util_School Bus - Wait Time (asserted),School Bus - Wait Time (asserted) * c_fwt,10 * time_factor,,,,,,,,,,,,coef_iwait_short
util_School Bus - Walk Time (asserted),School Bus - Walk Time (asserted),10 * time_factor,,,,,,,,,,,,coef_walktime_short
util_School Bus - Age 1 to 5,School Bus - Age 1 to 5,@(df.age > 0) & (df.age < 6),,,,,,,,,,,,coef_age0105_schb
util_School Bus - Age 6 to 12,School Bus - Age 6 to 12,@(df.age > 5) & (df.age < 13),,,,,,,,,,,,coef_age0612_schb
util_School Bus - Age 13 to 15,School Bus - Age 13 to 15,@(df.age > 12) & (df.age < 16),,,,,,,,,,,,coef_age1315_schb
util_School Bus - Female,School Bus - Female,@(df.sex == 2),,,,,,,,,,,,coef_female_schb
#,indiv tour ASCs,,,,,,,,,,,,,
util_ASC_Zero_auto,ASC - Zero auto,@(df.is_indiv) & (df.auto_ownership == 0),,sr2_ASC_no_auto,sr3p_ASC_no_auto,walk_ASC_no_auto,bike_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,drive_transit_ASC_no_auto,tnc_single_ASC_no_auto,
util_ASC_Auto_deficient,ASC - Auto deficient,@(df.is_indiv) & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0),,sr2_ASC_auto_deficient,sr3p_ASC_auto_deficient,walk_ASC_auto_deficient,bike_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,drive_transit_ASC_auto_deficient,tnc_single_ASC_auto_deficient,
util_ASC_Auto_sufficient,ASC - Auto sufficient,@(df.is_indiv) & (df.auto_ownership >= df.num_workers),,sr2_ASC_auto_sufficient,sr3p_ASC_auto_sufficient,walk_ASC_auto_sufficient,bike_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,drive_transit_ASC_auto_sufficient,tnc_single_ASC_auto_sufficient,
#,joint tour ASCs,,,,,,,,,,,,,
util_Joint_Walk_ASC_Zero_auto,Joint - Walk ASC - Zero auto,@(df.is_joint) & (df.auto_ownership == 0),,joint_sr2_ASC_no_auto,joint_sr3p_ASC_no_auto,joint_walk_ASC_no_auto,joint_bike_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_drive_transit_ASC_no_auto,joint_tnc_single_ASC_no_auto,
util_Joint_Walk_ASC_Auto_deficient,Joint - Walk ASC - Auto deficient,@(df.is_joint) & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0),,joint_sr2_ASC_auto_deficient,joint_sr3p_ASC_auto_deficient,joint_walk_ASC_auto_deficient,joint_bike_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_drive_transit_ASC_auto_deficient,joint_tnc_single_ASC_auto_deficient,
util_Joint_Walk_ASC_Auto_sufficient,Joint - Walk ASC - Auto sufficient,@(df.is_joint) & (df.auto_ownership >= df.num_workers),,joint_sr2_ASC_auto_sufficient,joint_sr3p_ASC_auto_sufficient,joint_walk_ASC_auto_sufficient,joint_bike_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_drive_transit_ASC_auto_sufficient,joint_tnc_single_ASC_auto_sufficient,
util_Local_bus_ASC,Local bus ASC,1,,,,,,local_bus_ASC,,,,,,
util_Walk_to_Light_Rail_ASC,Walk to Light Rail ASC,1,,,,,,,walk_light_rail_ASC,,,,,
util_Walk_to_Ferry_ASC,Walk to Ferry ASC,1,,,,,,,,walk_ferry_ASC,,,,
util_Commuter_Rail,Commuter Rail,1,,,,,,,,,commuter_rail_ASC,,,
util_Walk_to_Transit_dest_CBD,Walk to Transit dest CBD,@df.destination_in_cbd,,,,,,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,,,
util_Drive_to_Transit_dest_CBD,Drive to Transit dest CBD,@df.destination_in_cbd,,,,,,,,,,drive_transit_CBD_ASC,,
util_Drive_to_Transit_distance_penalty,Drive to Transit - distance penalty,@drvtrn_distpen_0_multiplier * (1-df.da_dist_skims_out/drvtrn_distpen_max).clip(lower=0),,,,,,,,,,coef_ivt,,
#, FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,
util_Walk_not_available_for_long_distances,Walk not available for long distances,@od_skims.max('DISTWALK') > 3,,,,-999,,,,,,,,
util_Bike_not_available_for_long_distances,Bike not available for long distances,@od_skims.max('DISTBIKE') > 8,,,,,-999,,,,,,,
util_Drive_alone_not_available_for_escort_tours,Drive alone not available for escort tours,is_escort,-999,,,,,,,,,,,
